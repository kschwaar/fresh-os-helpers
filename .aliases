#!/bin/bash

get_container_name () {
    CONTAINER_NAME=$1; 
    FILE_ROOT=$(git rev-parse --show-toplevel 2> /dev/null);
    if [ -z "$FILE_ROOT" ]; then
        START_DIR="$PWD"
        while [ "$PWD" != "/" ]; do
            FILE_ROOT=$(find "$PWD"/ -maxdepth 1 -name "docker-compose.yaml")
            if [ -n "$FILE_ROOT" ]; then
                FILE_ROOT=${FILE_ROOT%"docker-compose.yaml"}
                break
                exit
            fi
            cd ..
        done
        if [ -z "$FILE_ROOT" ]; then
            FILE_ROOT="$START_DIR"
            cd "$START_DIR"
        fi
    fi
    if [ "$CONTAINER_NAME" = "" ]; then
        CONTAINER_NAME=$(grep 'container_name' $FILE_ROOT"/docker-compose.yaml" | sed -E 's/\s+container_name: //');
    fi
    echo $CONTAINER_NAME
}
drbash () { docker exec -ti $(get_container_name $1) /bin/bash; }
dwbash () { docker exec -ti -u www-data $(get_container_name $1) /bin/bash; }
dlog () { docker logs --tail 500 -f $(get_container_name $1); }
alias di="docker images"         # shows a list of images on your system
alias dl="docker logs -f"        # usage: dl <container name> # shows the logs for the given container
alias dps="docker ps"            # shows the current running containers
alias dpsa="docker ps -a"        # shows all of the containers, running or not
alias dcd="docker-compose down"  # stops containers in the docker-compose.yml file and removes them
alias dcs="docker-compose stop"  # stops containers in the docker-compose.yml file (can be restarted)
alias dcu="docker-compose up -d" # starts containers in the docker-compose.yml file
alias dcr="dcd && dcu"           # rebuilds containers in the docker-compose.yml file


## END aliases
